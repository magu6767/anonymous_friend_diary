AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC Template'

Parameters:
  EnvironmentName:
    Type: String
    Description: 'Deployment environment (dev or prod)'

Mappings:
  EnvironmentToCidr:
    prod:
      VpcCidr: '172.30.0.0/18'
      PublicSubnet1aCidr: '172.30.0.0/24'
      PublicSubnet1cCidr: '172.30.2.0/24'
      PrivateSubnet1aCidr: '172.30.1.0/24'
      PrivateSubnet1cCidr: '172.30.3.0/24'
    dev:
      VpcCidr: '172.31.0.0/18'
      PublicSubnet1aCidr: '172.31.0.0/24'
      PublicSubnet1cCidr: '172.31.2.0/24'
      PrivateSubnet1aCidr: '172.31.1.0/24'
      PrivateSubnet1cCidr: '172.31.3.0/24'

Resources:
  # VPC
  AnfVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !FindInMap [EnvironmentToCidr, !Ref EnvironmentName, VpcCidr]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-vpc'

  # Internet Gateway
  AnfInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-igw'

  AnfVpcGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref AnfVpc
      InternetGatewayId: !Ref AnfInternetGateway

  # Public Subnets
  PublicSubnet1a:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref AnfVpc
      CidrBlock: !FindInMap [EnvironmentToCidr, !Ref EnvironmentName, PublicSubnet1aCidr]
      AvailabilityZone: 'ap-northeast-1a'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-public-subnet-1a'

  PublicSubnet1c:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref AnfVpc
      CidrBlock: !FindInMap [EnvironmentToCidr, !Ref EnvironmentName, PublicSubnet1cCidr]
      AvailabilityZone: 'ap-northeast-1c'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-public-subnet-1c'

  # Private Subnets
  PrivateSubnet1a:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref AnfVpc
      CidrBlock: !FindInMap [EnvironmentToCidr, !Ref EnvironmentName, PrivateSubnet1aCidr]
      AvailabilityZone: 'ap-northeast-1a'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-private-subnet-1a'

  PrivateSubnet1c:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref AnfVpc
      CidrBlock: !FindInMap [EnvironmentToCidr, !Ref EnvironmentName, PrivateSubnet1cCidr]
      AvailabilityZone: 'ap-northeast-1c'
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-private-subnet-1c'

  # Route Tables
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref AnfVpc
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-public-rtb'

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref AnfVpc
      Tags:
        - Key: 'Name'
          Value: !Sub 'anf-${EnvironmentName}-private-rtb'

  # Routes
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref AnfInternetGateway

  # Route Table Associations
  PublicSubnet1aRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1a
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1cRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1c
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1aRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1a
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet1cRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1c
      RouteTableId: !Ref PrivateRouteTable

Outputs:
  VpcId:
    Description: 'VPC ID'
    Value: !Ref AnfVpc
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'

  PublicSubnet1aId:
    Description: 'Public Subnet 1a ID'
    Value: !Ref PublicSubnet1a
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1aId'

  PublicSubnet1cId:
    Description: 'Public Subnet 1c ID'
    Value: !Ref PublicSubnet1c
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1cId'

  PrivateSubnet1aId:
    Description: 'Private Subnet 1a ID'
    Value: !Ref PrivateSubnet1a
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1aId'

  PrivateSubnet1cId:
    Description: 'Private Subnet 1c ID'
    Value: !Ref PrivateSubnet1c
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1cId'

  PublicSubnetIds:
    Description: 'Comma-delimited list of Public Subnet IDs'
    Value: !Join [',', [!Ref PublicSubnet1a, !Ref PublicSubnet1c]]
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetIds'

  PrivateSubnetIds:
    Description: 'Comma-delimited list of Private Subnet IDs'
    Value: !Join [',', [!Ref PrivateSubnet1a, !Ref PrivateSubnet1c]]
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetIds'

  PublicRouteTableId:
    Description: 'Public Route Table ID'
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-PublicRouteTableId'

  PrivateRouteTableId:
    Description: 'Private Route Table ID'
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub '${AWS::StackName}-PrivateRouteTableId'
